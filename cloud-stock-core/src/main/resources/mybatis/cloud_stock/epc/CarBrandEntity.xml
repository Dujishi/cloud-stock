<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoka.cloud.stock.core.epc.repo.entity.CarBrandEntity" >

<!-- for car brandResult Map-->
<resultMap id="BaseResultMap" type="com.xiaoka.cloud.stock.core.epc.repo.entity.CarBrandEntity" >
	<result column="brand_id" property="brandId" jdbcType="INTEGER" />
	<result column="brand" property="brand" jdbcType="VARCHAR" />
	<result column="brand_name" property="brandName" jdbcType="VARCHAR" />
	<result column="first_letter" property="firstLetter" jdbcType="VARCHAR" />
	<result column="is_valid" property="isValid" jdbcType="INTEGER" />
	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	<result column="create_by" property="createBy" jdbcType="VARCHAR" />
	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
</resultMap>
       
<!-- car_brand table all fields -->
<sql id="Base_Column_List" >
	 brand_id, brand_name, first_letter, is_valid, create_time, create_by, update_time, update_by
</sql>
   
<!-- 查询条件 -->
<sql id="Where_Clause">
<where>
<trim  suffixOverrides="," >
	<if test="brandId != null" >
	    and brand_id = #{brandId, jdbcType=INTEGER}
	</if>
	 	<if test="brandName != null and brandName != ''" >
	    and brand_name = #{brandName, jdbcType=VARCHAR}
	</if>
	<if test="brand != null and brand != ''" >
		and brand = #{brand, jdbcType=VARCHAR}
	</if>
	 	<if test="firstLetter != null and firstLetter != ''" >
	    and first_letter = #{firstLetter, jdbcType=VARCHAR}
	</if>
	<if test="isValid != null" >
	    and is_valid = #{isValid, jdbcType=INTEGER}
	</if>
	<if test="createTime != null" >
	    and create_time = #{createTime, jdbcType=TIMESTAMP}
	</if>
	 	<if test="createBy != null and createBy != ''" >
	    and create_by = #{createBy, jdbcType=VARCHAR}
	</if>
	<if test="updateTime != null" >
	    and update_time = #{updateTime, jdbcType=TIMESTAMP}
	</if>
	 	<if test="updateBy != null and updateBy != ''" >
	    and update_by = #{updateBy, jdbcType=VARCHAR}
	</if>
</trim>
</where>
</sql>

<!-- 插入记录 -->
<insert id="insert" parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarBrandEntity" >
  	insert into car_brand(
		brand_id,
		brand,
		brand_name,
		first_letter,
		is_valid,
		create_time,
		create_by,
		update_time,
		update_by
	) values (
		#{brandId, jdbcType=INTEGER},
		#{brand, jdbcType=VARCHAR},
		#{brandName, jdbcType=VARCHAR},
		#{firstLetter, jdbcType=VARCHAR},
		#{isValid, jdbcType=INTEGER},
		#{createTime, jdbcType=TIMESTAMP},
		#{createBy, jdbcType=VARCHAR},
		#{updateTime, jdbcType=TIMESTAMP},
		#{updateBy, jdbcType=VARCHAR}
	)
</insert>

<!-- 插入记录 -->
<insert id="batchInsert" parameterType="java.util.List" >
  	insert into car_brand(
		brand_id,
		brand,
		brand_name,
		first_letter,
		is_valid,
		create_time,
		create_by,
		update_time,
		update_by
	) values (
	<foreach collection="list" item="item" open="" close="" separator="),(">
		#{item.brandId, jdbcType=INTEGER},
		#{item.brand, jdbcType=VARCHAR},
		#{item.brandName, jdbcType=VARCHAR},
		#{item.firstLetter, jdbcType=VARCHAR},
		#{item.isValid, jdbcType=INTEGER},
		#{item.createTime, jdbcType=TIMESTAMP},
		#{item.createBy, jdbcType=VARCHAR},
		#{item.updateTime, jdbcType=TIMESTAMP},
		#{item.updateBy, jdbcType=VARCHAR}
	</foreach>
	)
</insert>

<!-- 根据所选内容更新 -->
<update id="updateBySelective" parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarBrandEntity" >
	update car_brand set 
	<trim  suffixOverrides="," >
		<if test="brandName != null  and brandName != '' ">
			brand_name = #{brandName, jdbcType=VARCHAR},
		</if>
		<if test="brand != null  and brand != '' ">
			brand = #{brand, jdbcType=VARCHAR},
		</if>
		<if test="firstLetter != null  and firstLetter != '' ">
			first_letter = #{firstLetter, jdbcType=VARCHAR},
		</if>
		<if test="isValid != null  ">
			is_valid = #{isValid, jdbcType=INTEGER},
		</if>
		<if test="createTime != null  ">
			create_time = #{createTime, jdbcType=TIMESTAMP},
		</if>
		<if test="createBy != null  and createBy != '' ">
			create_by = #{createBy, jdbcType=VARCHAR},
		</if>
		<if test="updateTime != null  ">
			update_time = #{updateTime, jdbcType=TIMESTAMP},
		</if>
		<if test="updateBy != null  and updateBy != '' ">
			update_by = #{updateBy, jdbcType=VARCHAR},
		</if>
	</trim> 
	where brand_id = #{brandId, jdbcType=INTEGER}
</update>

<!-- 删除 -->
<update id="delete" parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarBrandEntity">
	delete from car_brand where brand_id = #{brandId}
</update>

<!-- for car brand查询 -->
<select id="select" resultMap="BaseResultMap"  parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarBrandEntity">
	select 
    <include refid="Base_Column_List"/>
    from car_brand 
    <include refid="Where_Clause"/>
</select>

	<select id="selectAllBrands" resultMap="BaseResultMap">
		  SELECT * FROM car_brand
		  WHERE is_valid=1
	</select>

    <select id="selectByNames" resultMap="BaseResultMap"  parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from car_brand
        where is_valid = 1 and
        brand_name in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

	<select id="selectBrandFirstLetter" resultMap="BaseResultMap">
		select
		first_letter
		from car_brand
		where is_valid = 1 group by first_letter order by first_letter;
	</select>

	<select id="selectBrandFirstLetterByBrandIds" resultMap="BaseResultMap"  parameterType="java.util.List">
		select
		first_letter
		from car_brand
		where is_valid = 1 and brand_id IN
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
		group by first_letter order by first_letter;
	</select>

	<select id="selectBrandByFirstLetter" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from car_brand
		where is_valid = 1 and first_letter = #{firstLetter, jdbcType=VARCHAR} order by brand_name;
	</select>

	<select id="selectAllBrandsBySort" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM car_brand
		WHERE is_valid=1 order by first_letter, brand_name;
	</select>

	<select id="selectBrandByIdsAndFirstLetter" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List"/>
		from car_brand
		where is_valid = 1
		<if test="firstLetter != null  and firstLetter != '' ">
			and first_letter = #{firstLetter, jdbcType=VARCHAR}
		</if>
		and brand_id in
		<foreach item="item" index="index" collection="brandIds" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by first_letter, brand_name;
	</select>
</mapper>   
