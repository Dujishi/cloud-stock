<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoka.cloud.stock.core.epc.repo.entity.CarModelPicEntity" >

<!-- for car brandResult Map-->
<resultMap id="BaseResultMap" type="com.xiaoka.cloud.stock.core.epc.repo.entity.CarModelPicEntity" >
	<result column="model_id" property="modelId" jdbcType="INTEGER" />
	<result column="kps_name" property="kpsName" jdbcType="VARCHAR" />
	<result column="assembly_id" property="assemblyId" jdbcType="INTEGER" />
	<result column="assembly_name" property="assemblyName" jdbcType="VARCHAR" />
	<result column="sub_assembly_id" property="subAssemblyId" jdbcType="INTEGER" />
	<result column="sub_assembly_name" property="subAssemblyName" jdbcType="VARCHAR" />
	<result column="pic_num" property="picNum" jdbcType="VARCHAR" />
	<result column="pic_name" property="picName" jdbcType="VARCHAR" />
	<result column="pic_path" property="picPath" jdbcType="VARCHAR" />
	<result column="original_sub_assembly_name" property="originalSubAssemblyName" jdbcType="VARCHAR" />
	<result column="timer_id" property="timerId" jdbcType="INTEGER" />
	<result column="type" property="type" jdbcType="INTEGER" />
	<result column="enable" property="enable" jdbcType="INTEGER" />
	<result column="is_valid" property="isValid" jdbcType="INTEGER" />
	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	<result column="create_by" property="createBy" jdbcType="VARCHAR" />
	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
</resultMap>
       
<!-- car_model_pic table all fields -->
<sql id="Base_Column_List" >
	 model_id, assembly_id, assembly_name, sub_assembly_id, sub_assembly_name, pic_num, pic_name, pic_path, original_sub_assembly_name, timer_id, `type`, enable, is_valid, create_time, create_by, update_time, update_by
</sql>
   
<!-- 查询条件 -->
<sql id="Where_Clause">
<where>
<trim  suffixOverrides="," >
	<if test="modelId != null" >
	    and model_id = #{modelId, jdbcType=INTEGER}
	</if>
	<if test="kpsName != null and kpsName != ''" >
		and kps_name = #{kpsName, jdbcType=VARCHAR}
	</if>
	<if test="assemblyId != null" >
	    and assembly_id = #{assemblyId, jdbcType=INTEGER}
	</if>
	 	<if test="assemblyName != null and assemblyName != ''" >
	    and assembly_name = #{assemblyName, jdbcType=VARCHAR}
	</if>
	<if test="subAssemblyId != null" >
	    and sub_assembly_id = #{subAssemblyId, jdbcType=INTEGER}
	</if>
	 	<if test="subAssemblyName != null and subAssemblyName != ''" >
	    and sub_assembly_name = #{subAssemblyName, jdbcType=VARCHAR}
	</if>
	 	<if test="picNum != null and picNum != ''" >
	    and pic_num = #{picNum, jdbcType=VARCHAR}
	</if>
	 	<if test="picName != null and picName != ''" >
	    and pic_name = #{picName, jdbcType=VARCHAR}
	</if>
	 	<if test="picPath != null and picPath != ''" >
	    and pic_path = #{picPath, jdbcType=VARCHAR}
	</if>
	 	<if test="originalSubAssemblyName != null and originalSubAssemblyName != ''" >
	    and original_sub_assembly_name = #{originalSubAssemblyName, jdbcType=VARCHAR}
	</if>
	<if test="timerId != null" >
		and timer_id = #{timerId, jdbcType=INTEGER}
	</if>
	<if test="type != null" >
		and `type` = #{type, jdbcType=INTEGER}
	</if>
	<if test="enable != null" >
		and enable = #{enable, jdbcType=INTEGER}
	</if>
	<if test="isValid != null" >
	    and is_valid = #{isValid, jdbcType=INTEGER}
	</if>
	<if test="createTime != null" >
	    and create_time = #{createTime, jdbcType=TIMESTAMP}
	</if>
	 	<if test="createBy != null and createBy != ''" >
	    and create_by = #{createBy, jdbcType=VARCHAR}
	</if>
	<if test="updateTime != null" >
	    and update_time = #{updateTime, jdbcType=TIMESTAMP}
	</if>
	 	<if test="updateBy != null and updateBy != ''" >
	    and update_by = #{updateBy, jdbcType=VARCHAR}
	</if>
</trim>
</where>
</sql>

<!-- 插入记录 -->
<insert id="insert" parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarModelPicEntity" >
  	insert into car_model_pic(
		model_id,
		kps_name,
		assembly_id,
		assembly_name,
		sub_assembly_id,
		sub_assembly_name,
		pic_num,
		pic_name,
		pic_path,
		original_sub_assembly_name,
		timer_id,
		`type`,
		enable,
		create_by
	) values (
		#{modelId, jdbcType=INTEGER},
		#{kpsName, jdbcType=VARCHAR},
		#{assemblyId, jdbcType=INTEGER},
		#{assemblyName, jdbcType=VARCHAR},
		#{subAssemblyId, jdbcType=INTEGER},
		#{subAssemblyName, jdbcType=VARCHAR},
		#{picNum, jdbcType=VARCHAR},
		#{picName, jdbcType=VARCHAR},
		#{picPath, jdbcType=VARCHAR},
		#{originalSubAssemblyName, jdbcType=VARCHAR},
		#{timerId, jdbcType=INTEGER},
		#{type, jdbcType=INTEGER},
		#{enable, jdbcType=INTEGER},
		#{createBy, jdbcType=VARCHAR}
	)
</insert>

<!-- 插入记录 -->
<insert id="batchInsert" parameterType="java.util.List" >
	insert into car_model_pic(
		model_id,
		kps_name,
		assembly_id,
		assembly_name,
		sub_assembly_id,
		sub_assembly_name,
		pic_num,
		pic_name,
		pic_path,
		original_sub_assembly_name,
		timer_id,
		`type`,
		enable,
		create_by
	)
	values
	<foreach collection="list" item="item" index="index" separator=",">
		(
		#{item.modelId, jdbcType=INTEGER},
		#{item.kpsName, jdbcType=VARCHAR},
		#{item.assemblyId, jdbcType=INTEGER},
		#{item.assemblyName, jdbcType=VARCHAR},
		#{item.subAssemblyId, jdbcType=INTEGER},
		#{item.subAssemblyName, jdbcType=VARCHAR},
		#{item.picNum, jdbcType=VARCHAR},
		#{item.picName, jdbcType=VARCHAR},
		#{item.picPath, jdbcType=VARCHAR},
		#{item.originalSubAssemblyName, jdbcType=VARCHAR},
		#{item.timerId, jdbcType=INTEGER},
		#{item.type, jdbcType=INTEGER},
		#{item.enable, jdbcType=INTEGER},
		#{item.createBy, jdbcType=VARCHAR}
		)
	</foreach>
</insert>

<!-- 根据所选内容更新 -->
<update id="updateBySelective" parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarModelPicEntity" >
	update car_model_pic set 
	<trim  suffixOverrides="," >
		<if test="kpsName != null  and kpsName != '' ">
			kps_name = #{kpsName, jdbcType=VARCHAR},
		</if>
		<if test="assemblyId != null  ">
			assembly_id = #{assemblyId, jdbcType=INTEGER},
		</if>
		<if test="assemblyName != null  and assemblyName != '' ">
			assembly_name = #{assemblyName, jdbcType=VARCHAR},
		</if>
		<if test="subAssemblyId != null  ">
			sub_assembly_id = #{subAssemblyId, jdbcType=INTEGER},
		</if>
		<if test="subAssemblyName != null  and subAssemblyName != '' ">
			sub_assembly_name = #{subAssemblyName, jdbcType=VARCHAR},
		</if>
		<if test="picNum != null  and picNum != '' ">
			pic_num = #{picNum, jdbcType=VARCHAR},
		</if>
		<if test="picName != null  and picName != '' ">
			pic_name = #{picName, jdbcType=VARCHAR},
		</if>
		<if test="picPath != null  and picPath != '' ">
			pic_path = #{picPath, jdbcType=VARCHAR},
		</if>
		<if test="originalSubAssemblyName != null  and originalSubAssemblyName != '' ">
			original_sub_assembly_name = #{originalSubAssemblyName, jdbcType=VARCHAR},
		</if>
		<if test="timerId != null  ">
			timer_id = #{timerId, jdbcType=INTEGER},
		</if>
		<if test="type != null  ">
			`type` = #{type, jdbcType=INTEGER},
		</if>
		<if test="enable != null  ">
			enable = #{enable, jdbcType=INTEGER},
		</if>
		<if test="isValid != null  ">
			is_valid = #{isValid, jdbcType=INTEGER},
		</if>
		<if test="createTime != null  ">
			create_time = #{createTime, jdbcType=TIMESTAMP},
		</if>
		<if test="createBy != null  and createBy != '' ">
			create_by = #{createBy, jdbcType=VARCHAR},
		</if>
		<if test="updateTime != null  ">
			update_time = #{updateTime, jdbcType=TIMESTAMP},
		</if>
		<if test="updateBy != null  and updateBy != '' ">
			update_by = #{updateBy, jdbcType=VARCHAR},
		</if>
	</trim> 
	where model_id = #{modelId, jdbcType=INTEGER}
</update>

<!-- 删除 -->
<update id="delete" parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarModelPicEntity">
	delete from car_model_pic where model_id = #{modelId}
</update>

<!-- for car brand查询 -->
<select id="select" resultMap="BaseResultMap"  parameterType="com.xiaoka.cloud.stock.core.epc.repo.entity.CarModelPicEntity">
	select 
    <include refid="Base_Column_List"/>
    from car_model_pic 
    <include refid="Where_Clause"/>
</select>

<select id="selectByModelIdAndSubAssemblyName" parameterType="map" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List"/>
	from car_model_pic
	where is_valid = 1 and model_id = #{modelId} and type = #{type} and sub_assembly_name in
	<foreach item="item" index="index" collection="subAssemblyNameList" open="(" separator="," close=")">
		#{item}
	</foreach>
	<if test="type == 1">
		and timer_id > 0
	</if>
</select>

<select id="selectGroupPicByModelId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	select pic_num
	from car_model_pic
	where is_valid = 1 and model_id = #{modelId} group by pic_num
</select>
</mapper>   
